name: webapiteste-ngnix

networks:
  proxy:
    driver: bridge 

services:
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
     - '3000:3000'
    networks:
      - proxy
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor

  grafana-loki:
    image: grafana/loki:3.1.0
    container_name: grafana-loki    
    ports:
     - '3100:3100'
    volumes:
      - ./grafana-loki-config.yaml:/etc/loki/local-config.yaml
    command: 
     - -config.file=/etc/loki/local-config.yaml
     - -print-config-stderr=true
    networks:
      - proxy

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./output:/etc/output:rw
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      # - 4317:4317 # OTLP gRPC receiver
      # - 4318:4318 # OTLP http receiver
      # - 55679:55679 # zpages extension
    networks:
      - proxy
    depends_on:
      - grafana-loki

  jaeger:
    image: jaegertracing/all-in-one:1.48.0
    restart: always
    ports:
      - "6831:6831/udp" # UDP port for Jaeger agent
      - "16686:16686" # Web UI
      # - "14268:14268" # HTTP port for spans
      # - "4317:4317" # OTLP gRPC receiver for jaeger
      # - "4318:4318" # OTLP HTTP receiver for jaeger
    environment:
      - LOG_LEVEL=debug
    networks:
      - proxy 

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - proxy

  pedido-api:
    image:  pedido-api:dev
    build: 
      context: .
      dockerfile: ./Src/00-PedidoApi/Dockerfile
    ports:
      - "8080:8080" 
    environment:
      - DELAY=2
      - BASE_ADDRESS=http://estoque-api:8080/
      - URL_POST=Estoque
    networks:
      - proxy
    depends_on:
      - otel-collector
      - jaeger

  estoque-api:
    image:  estoque-api:dev
    build: 
      context: .
      dockerfile: ./Src/01-EstoqueApi/Dockerfile
    ports:
      - "8081:8080"
    environment:
      - DELAY=1
      - BASE_ADDRESS=http://notafiscal-api:8080/
      - URL_POST=NotaFiscal
    networks:
      - proxy
    depends_on:
      - otel-collector
      - jaeger

  notafiscal-api:
    image:  notafiscal-api:dev
    build: 
      context: .
      dockerfile: ./Src/02-NotaFiscalApi/Dockerfile
    ports:
      - "8082:8080" 
    environment:
      - DELAY=0
    networks:
      - proxy 
    depends_on:
      - otel-collector
      - jaeger